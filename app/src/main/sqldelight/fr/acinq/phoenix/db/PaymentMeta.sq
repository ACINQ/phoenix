import fr.acinq.phoenix.db.LNUrlPayActionTypeVersion;

--
-- Contain details/metadata that cannot be stored in the core payment database,
-- such as the final closing transaction, or swap data.
--

CREATE TABLE PaymentMeta (
  id TEXT NOT NULL PRIMARY KEY,

  swap_in_address TEXT DEFAULT NULL,
  swap_in_tx TEXT DEFAULT NULL,

  swap_out_address TEXT DEFAULT NULL,
  swap_out_tx TEXT DEFAULT NULL,
  swap_out_feerate_per_byte INTEGER DEFAULT NULL,
  swap_out_fee_sat INTEGER DEFAULT NULL,
  swap_out_conf INTEGER DEFAULT NULL,

  funding_tx TEXT DEFAULT NULL,
  funding_fee_pct REAL DEFAULT NULL,
  funding_fee_raw_sat INTEGER DEFAULT NULL,

  closing_type INTEGER DEFAULT NULL,
  closing_channel_id TEXT UNIQUE DEFAULT NULL,
  closing_spending_txs TEXT DEFAULT NULL,
  closing_main_output_script TEXT DEFAULT NULL,
  closing_cause TEXT DEFAULT NULL,

  custom_desc TEXT DEFAULT NULL,

  lnurlpay_url TEXT DEFAULT NULL,
  lnurlpay_action_typeversion TEXT AS LNUrlPayActionTypeVersion DEFAULT NULL,
  lnurlpay_action_data TEXT DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS payment_closing_channel_id_index ON PaymentMeta(closing_channel_id);

get:
SELECT * FROM PaymentMeta WHERE id=?;

getByChannelId:
SELECT * FROM PaymentMeta WHERE closing_channel_id=?;

insertEmpty:
INSERT INTO PaymentMeta(id)
VALUES (?);

insertSwapIn:
INSERT INTO PaymentMeta(id, swap_in_address)
VALUES (?, ?);

insertSwapOut:
INSERT INTO PaymentMeta(id, swap_out_address, swap_out_feerate_per_byte, swap_out_fee_sat)
VALUES (?, ?, ?, ?);

insertClosing:
INSERT INTO PaymentMeta(id, closing_type, closing_channel_id, closing_spending_txs, closing_main_output_script)
VALUES (?, ?, ?, ?, ?);

setLNUrlPayUrl:
UPDATE PaymentMeta
SET lnurlpay_url=?
WHERE id=?;

setLNUrlPayAction:
UPDATE PaymentMeta
SET lnurlpay_action_typeversion=?, lnurlpay_action_data=?
WHERE id=?;

setDesc:
UPDATE PaymentMeta
SET custom_desc=?
WHERE id=?;

setChannelClosingError:
UPDATE PaymentMeta
SET closing_cause=?
WHERE id=?;
