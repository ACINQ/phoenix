-- This table links an on-chain transaction to one/many incoming or outgoing payment
-- * tx_id => hex identifier of an on-chain transaction
-- * type  => tracks the type of a payment. The value is an int as defined in the DbType enum
-- * id    => the identifier of the payment, can be a payment hash (incoming) or a UUID (outgoing)
CREATE TABLE IF NOT EXISTS link_tx_to_payments (
    tx_id BLOB NOT NULL,
    type INTEGER NOT NULL,
    id TEXT NOT NULL,
    confirmed_at INTEGER DEFAULT NULL,
    locked_at INTEGER DEFAULT NULL,
    PRIMARY KEY (tx_id, type, id)
);

CREATE INDEX IF NOT EXISTS link_tx_to_payments_txid ON link_tx_to_payments(tx_id);

listUnconfirmed:
SELECT DISTINCT(tx_id) FROM link_tx_to_payments WHERE confirmed_at IS NULL;

getPaymentIdForTx:
SELECT tx_id, type, id FROM link_tx_to_payments WHERE tx_id=?;

linkTxToPayment:
INSERT INTO link_tx_to_payments(tx_id, type, id) VALUES (?, ?, ?);

setConfirmed:
UPDATE link_tx_to_payments SET confirmed_at=? WHERE tx_id=?;

setLocked:
UPDATE link_tx_to_payments SET locked_at=? WHERE tx_id=?;
