

-- This table stores the CKRecord metadata corresponding to a synced contact.
-- * id => stores the primary key of the contact row
--
CREATE TABLE IF NOT EXISTS cloudkit_contacts_metadata_old (
    id TEXT NOT NULL PRIMARY KEY,
    record_creation INTEGER NOT NULL,
    record_blob BLOB NOT NULL
);

-- This table stores the queue of items that need to be pushed to the cloud.
-- * rowid => because we might store the same `id` multiple times
-- * id => stores the primary key of the contact row
--
CREATE TABLE IF NOT EXISTS cloudkit_contacts_queue_old (
    rowid INTEGER PRIMARY KEY,
    id TEXT NOT NULL,
    date_added INTEGER NOT NULL
);

-- ########## cloudkit_contacts_metadata ##########

fetchMetadataBatch:
SELECT * FROM cloudkit_contacts_metadata_old
LIMIT :limit;

deleteMetadata:
DELETE FROM cloudkit_contacts_metadata_old
WHERE id = ?;

-- ########## cloudkit_contacts_queue ##########

fetchQueueBatch:
SELECT * FROM cloudkit_contacts_queue_old
ORDER BY date_added ASC
LIMIT :limit;

deleteFromQueue:
DELETE FROM cloudkit_contacts_queue_old
WHERE rowid = ?;
