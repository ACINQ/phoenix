import fr.acinq.phoenix.db.payments.OutgoingPartClosingInfoTypeVersion;

-- Migration: v7 -> v8
--
-- Changes:
-- * add a new splice_outgoing_payments table to store outgoing splices
-- * add a new channel_close_outgoing_payments table to store channel closings
-- * add a new link_tx_to_payments table that links payments to on-chain transactions
-- * add a new expected_amount_msat column in the incoming_payments table

CREATE TABLE IF NOT EXISTS splice_outgoing_payments (
    id TEXT NOT NULL PRIMARY KEY,
    recipient_amount_sat INTEGER NOT NULL,
    address TEXT NOT NULL,
    mining_fees_sat INTEGER NOT NULL,
    tx_id BLOB NOT NULL,
    channel_id BLOB NOT NULL,
    created_at INTEGER NOT NULL,
    confirmed_at INTEGER DEFAULT NULL,
    locked_at INTEGER DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS channel_close_outgoing_payments (
    id TEXT NOT NULL PRIMARY KEY,
    recipient_amount_sat INTEGER NOT NULL,
    address TEXT NOT NULL,
    is_default_address INTEGER NOT NULL,
    mining_fees_sat INTEGER NOT NULL,
    tx_id BLOB NOT NULL,
    created_at INTEGER NOT NULL,
    confirmed_at INTEGER DEFAULT NULL,
    locked_at INTEGER DEFAULT NULL,
    channel_id BLOB NOT NULL,
    closing_info_type TEXT AS OutgoingPartClosingInfoTypeVersion NOT NULL,
    closing_info_blob BLOB NOT NULL
);

CREATE TABLE IF NOT EXISTS link_tx_to_payments (
    tx_id BLOB NOT NULL,
    type INTEGER NOT NULL,
    id TEXT NOT NULL,
    confirmed_at INTEGER DEFAULT NULL,
    locked_at INTEGER DEFAULT NULL,
    PRIMARY KEY (tx_id, type, id)
);

CREATE TABLE IF NOT EXISTS splice_cpfp_outgoing_payments (
    id TEXT NOT NULL PRIMARY KEY,
    mining_fees_sat INTEGER NOT NULL,
    channel_id BLOB NOT NULL,
    tx_id BLOB NOT NULL,
    created_at INTEGER NOT NULL,
    confirmed_at INTEGER DEFAULT NULL,
    locked_at INTEGER DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS link_tx_to_payments_txid ON link_tx_to_payments(tx_id);
